<UserControl
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm" 
    xmlns:ViewModels="clr-namespace:WpfGridControlTest01.ViewModels"
    xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid" 
    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
    x:Class="WpfGridControlTest01.Views.MainView"
    mc:Ignorable="d" d:DesignHeight="600" d:DesignWidth="900">
    <UserControl.DataContext>
        <ViewModels:MainViewModel/>
    </UserControl.DataContext>
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Dictionary1.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <ControlTemplate x:Key="CheckBoxControlTemplate1" TargetType="{x:Type CheckBox}">
                <Grid x:Name="Root" Background="Transparent" Margin="{TemplateBinding Padding}" dx:BlendHelper2.ThemeInfo="Core\Core\Themes\Office2019DarkGray\StandardControls\CheckBox.xaml;17;12">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup x:Name="FocusStates">
                            <VisualState x:Name="Focused">
                                <Storyboard>
                                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="IsFocused"/>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Unfocused"/>
                        </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>
                    <Grid x:Name="Field" Grid.ColumnSpan="1" Grid.Column="0" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Height="14" Margin="0,1" dx:BlendHelper2.ThemeInfo="Core\Core\Themes\Office2019DarkGray\StandardControls\CheckBox.xaml;22;14" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Width="14">
                        <dx:DXBorder x:Name="IsDefault" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" EnableDPICorrection="{x:Null}" dx:BlendHelper2.ThemeInfo="Core\Core\Themes\Office2019DarkGray\StandardControls\CheckBox.xaml;23;16"/>
                        <dx:DXBorder x:Name="IsFocused" BorderBrush="#FF0072C6" BorderThickness="{TemplateBinding BorderThickness}" EnableDPICorrection="{x:Null}" Opacity="0" dx:BlendHelper2.ThemeInfo="Core\Core\Themes\Office2019DarkGray\StandardControls\CheckBox.xaml;24;16" Uid="@BorderBrush=Focused"/>
                        <Path x:Name="Indeterminate" dx:BlendHelper2.ThemeInfo="Core\Core\Themes\Office2019DarkGray\StandardControls\CheckBox.xaml;25;16" Visibility="Collapsed">
                            <Path.Style>
                                <Style TargetType="{x:Type Path}">
                                    <Setter Property="Data" Value="F1M0,0L8,0 8,8 0,8 0,0z"/>
                                    <Setter Property="Fill" Value="#FF262626"/>
                                    <Setter Property="Height" Value="8"/>
                                    <Setter Property="HorizontalAlignment" Value="Center"/>
                                    <Setter Property="Margin" Value="2"/>
                                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                                    <Setter Property="Stretch" Value="Fill"/>
                                    <Setter Property="VerticalAlignment" Value="Center"/>
                                    <Setter Property="Width" Value="8"/>
                                </Style>
                            </Path.Style>
                        </Path>
                        <Path x:Name="Checked" dx:BlendHelper2.ThemeInfo="Core\Core\Themes\Office2019DarkGray\StandardControls\CheckBox.xaml;26;16" Visibility="Collapsed">
                            <Path.Style>
                                <Style TargetType="{x:Type Path}">
                                    <Setter Property="Data" Value="F1M0,3L0,5 3,8 8,3 8,1 3,6 0,3z"/>
                                    <Setter Property="Fill" Value="#FF262626"/>
                                    <Setter Property="Height" Value="8"/>
                                    <Setter Property="HorizontalAlignment" Value="Center"/>
                                    <Setter Property="Margin" Value="2"/>
                                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                                    <Setter Property="Stretch" Value="Fill"/>
                                    <Setter Property="VerticalAlignment" Value="Center"/>
                                    <Setter Property="Width" Value="8"/>
                                </Style>
                            </Path.Style>
                        </Path>
                    </Grid>
                    <ContentPresenter x:Name="contentPresenter" Grid.ColumnSpan="1" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="4,0,0,0" RecognizesAccessKey="True" dx:BlendHelper2.ThemeInfo="Core\Core\Themes\Office2019DarkGray\StandardControls\CheckBox.xaml;28;14" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Fill" TargetName="Checked" Value="Black"/>
                        <Setter Property="Fill" TargetName="Indeterminate" Value="Black"/>
                        <Setter Property="Background" TargetName="IsDefault" Value="#FF989694"/>
                        <Setter Property="BorderBrush" TargetName="IsDefault" Value="#FF444444"/>
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Fill" TargetName="Checked" Value="Black"/>
                        <Setter Property="Fill" TargetName="Indeterminate" Value="Black"/>
                        <Setter Property="Background" TargetName="IsDefault" Value="#FF898785"/>
                        <Setter Property="BorderBrush" TargetName="IsDefault" Value="#FF444444"/>
                    </Trigger>
                    <Trigger Property="IsFocused" Value="True">
                        <Setter Property="Opacity" TargetName="IsFocused" Value="1"/>
                    </Trigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsMouseOver" Value="True"/>
                            <Condition Property="IsFocused" Value="True"/>
                        </MultiTrigger.Conditions>
                        <Setter Property="Opacity" TargetName="IsFocused" Value="1"/>
                    </MultiTrigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsPressed" Value="True"/>
                            <Condition Property="IsFocused" Value="True"/>
                        </MultiTrigger.Conditions>
                        <Setter Property="Opacity" TargetName="IsFocused" Value="1"/>
                    </MultiTrigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Opacity" TargetName="Root" Value="0.38"/>
                    </Trigger>
                    <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                        <Setter Property="Height" TargetName="Checked" Value="16"/>
                        <Setter Property="Width" TargetName="Checked" Value="16"/>
                        <Setter Property="Height" TargetName="Field" Value="28"/>
                        <Setter Property="Width" TargetName="Field" Value="28"/>
                        <Setter Property="Height" TargetName="Indeterminate" Value="16"/>
                        <Setter Property="Width" TargetName="Indeterminate" Value="16"/>
                    </Trigger>
                    <Trigger Property="IsChecked" Value="True">
                        <Setter Property="Visibility" TargetName="Checked" Value="Visible"/>
                    </Trigger>
                    <Trigger Property="IsChecked" Value="{x:Null}">
                        <Setter Property="Visibility" TargetName="Indeterminate" Value="Visible"/>
                    </Trigger>
                    <Trigger Property="FlowDirection" Value="RightToLeft">
                        <Setter Property="LayoutTransform" TargetName="Field">
                            <Setter.Value>
                                <ScaleTransform CenterY="0.5" CenterX="0.5" ScaleY="1" ScaleX="-1"/>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
        </ResourceDictionary>
    </UserControl.Resources>
    <dxmvvm:Interaction.Behaviors>
        <dx:DXMessageBoxService/>
    </dxmvvm:Interaction.Behaviors>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="45"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <dxg:GridControl x:Name="gridctrl0"
                         ItemsSource="{Binding Products2}"
                         Grid.Row="1"
                         SelectionChanged="gridctrl0_SelectionChanged"
                         SelectionMode="Row">
            <dxg:GridControl.View>
                <dxg:TableView x:Name="tableview0"
                               EditorShowMode="MouseDown"
                               Tag="Test Value"
                               EnableSelectedRowAppearance="True"
                               ShowTotalSummary="False"
                               ShowIndicator="True"
                               ShowGroupPanel="False"
                               ShowCheckBoxSelectorColumn="False"
                               IsColumnMenuEnabled="False"
                               IsRowCellMenuEnabled="True"
                               AllowColumnFiltering="False"
                               AllowColumnMoving="False"
                               AllowSorting="False"
                               AllowFixedColumnMenu="True"
                               AllowPaging="True"
                               KeyDown="tableview0_KeyDown"
                               PreviewMouseLeftButtonDown="tableview0_PreviewMouseLeftButtonDown"
                               RowDoubleClick="tableview0_RowDoubleClick"
                               ShowGridMenu="tableview0_ShowGridMenu"
                               ShowingEditor="tableview0_ShowingEditor"
                               CellValueChanged="tableview0_CellValueChanged">
                    <!--<dxg:TableView.RowCellMenuCustomizations>
                        <dxb:BarButtonItem Name="deleteRowItem" Content="Delete"/>
                        <dxb:BarButtonItem Name="copyCellDataItem" Content="Copy Cell Data"/>
                    </dxg:TableView.RowCellMenuCustomizations>-->
                </dxg:TableView>
            </dxg:GridControl.View>
            <dxg:GridColumn FieldName="IsMine"
                            Header="Mine"
                            IsSmart="True"
                            HorizontalHeaderContentAlignment="Center">
                <dxg:GridColumn.CellTemplate>
                    <DataTemplate>
                        <dxe:CheckEdit x:Name="PART_Editor" HorizontalAlignment="Center" />
                    </DataTemplate>
                </dxg:GridColumn.CellTemplate>
            </dxg:GridColumn>

            <dxg:GridColumn FieldName="Chk1"
                            Header="CHK1"
                            IsSmart="True"
                            HorizontalHeaderContentAlignment="Center">
                <dxg:GridColumn.CellTemplate>
                    <DataTemplate>
                        <dxe:CheckEdit x:Name="PART_Editor"
                                       HorizontalAlignment="Center" />
                    </DataTemplate>
                </dxg:GridColumn.CellTemplate>
                <!--<dxg:GridColumn.EditSettings>
                    <dxe:CheckEditSettings HorizontalContentAlignment="Center"/>
                </dxg:GridColumn.EditSettings>-->
            </dxg:GridColumn>
            <dxg:GridColumn FieldName="BandWide"
                            IsSmart="True"
                            HorizontalHeaderContentAlignment="Center">
                <dxg:GridColumn.EditSettings>
                    <dxe:TextEditSettings HorizontalContentAlignment="Center"/>
                </dxg:GridColumn.EditSettings>
            </dxg:GridColumn>
            <dxg:GridColumn FieldName="Chk2"
                            Header="CHK2"
                            IsSmart="True"
                            HorizontalHeaderContentAlignment="Center">
                <dxg:GridColumn.CellTemplate>
                    <DataTemplate>
                        <!--<CheckBox x:Name="PART_Editor" HorizontalAlignment="Center" IsChecked="{Binding RowData.Row.Chk2}"/>-->
                        <dxe:CheckEdit x:Name="PART_Editor" HorizontalAlignment="Center" Template="{DynamicResource CheckBoxControlTemplate2}" />
                    </DataTemplate>
                </dxg:GridColumn.CellTemplate>
                <!--<dxg:GridColumn.EditSettings>
                    <dxe:TextEditSettings HorizontalContentAlignment="Center"/>
                </dxg:GridColumn.EditSettings>-->
            </dxg:GridColumn>
            <dxg:GridColumn FieldName="Freq"
                            IsSmart="True"
                            HorizontalHeaderContentAlignment="Center"
                            AllowEditing="True">
                <dxg:GridColumn.EditSettings>
                    <dxe:TextEditSettings HorizontalContentAlignment="Center"/>
                </dxg:GridColumn.EditSettings>
            </dxg:GridColumn>
            <dxg:GridColumn FieldName="SelectedProdcutId"
                            Header="Procut Type"
                            IsSmart="True"
                            AllowEditing="True"
                            HorizontalHeaderContentAlignment="Center">
                <dxg:GridColumn.EditSettings>
                    <dxe:ComboBoxEditSettings ItemsSource="{Binding ProductTypes}" DisplayMember="TypeName" ValueMember="Id" HorizontalContentAlignment="Center"/>
                </dxg:GridColumn.EditSettings>
            </dxg:GridColumn>
            <dxg:GridColumn FieldName="SelectedMode" Header="Mode" IsSmart="True" HorizontalHeaderContentAlignment="Center">
                <dxg:GridColumn.EditSettings>
                    <dxe:ComboBoxEditSettings ItemsSource="{Binding Path=Modes}" HorizontalContentAlignment="Center"/>
                </dxg:GridColumn.EditSettings>
            </dxg:GridColumn>
            <dxg:GridColumn FieldName="SelectedCate" Header="Category" IsSmart="True" HorizontalHeaderContentAlignment="Center">
                <dxg:GridColumn.EditSettings>
                    <dxe:ComboBoxEditSettings ItemsSource="{Binding Cates}"
                                              DisplayMember="Value"
                                              ValueMember="Key"
                                              HorizontalContentAlignment="Center"/>
                </dxg:GridColumn.EditSettings>
            </dxg:GridColumn>
            <dxg:GridColumn FieldName="SelectedCate2" Header="Category2" IsSmart="True" HorizontalHeaderContentAlignment="Center">
                <!--<dxg:GridColumn.EditSettings>
                    <dxe:ComboBoxEditSettings ItemsSource="{Binding Cates2}" HorizontalContentAlignment="Center"/>
                </dxg:GridColumn.EditSettings>-->
                <!--<dxg:GridColumn.CellTemplate>
                    <DataTemplate>
                        <dxe:ComboBoxEdit x:Name="PART_Editor" ItemsSource="{Binding Cates2}" HorizontalContentAlignment="Center"/>
                    </DataTemplate>
                </dxg:GridColumn.CellTemplate>-->
                <!--<dxg:GridColumn.CellTemplate>
                    <DataTemplate>
                        <ComboBox ItemsSource="{Binding RowData.Row.Cates22}" SelectedItem="{Binding Row.SelectedCate2}" HorizontalContentAlignment="Center"/>
                    </DataTemplate>
                </dxg:GridColumn.CellTemplate>-->
                <dxg:GridColumn.CellTemplate>
                    <DataTemplate>
                        <dxe:ComboBoxEdit x:Name="PART_Editor" ItemsSource="{Binding RowData.Row.Cates22}" HorizontalContentAlignment="Center"/>
                    </DataTemplate>
                </dxg:GridColumn.CellTemplate>
            </dxg:GridColumn>
        </dxg:GridControl>
        <Button x:Name="BtnAdd"
                Content="{Binding BtnAdd}"
                IsEnabled="{Binding EnableBtnAdd}"
                Click="Button_Click"
                HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" Width="75" Grid.Row="0"/>
        <Button x:Name="BtnDel"
                Content="{Binding BtnDel}"
                IsEnabled="{Binding EnableBtnDel}"
                Click="Button_Click_1"
                HorizontalAlignment="Left" Margin="90,10,0,0" VerticalAlignment="Top" Width="75" Grid.Row="0"/>
        <Button x:Name="BtnReload"
                Content="{Binding BtnReload}"
                IsEnabled="{Binding EnableBtnReload}"
                Click="Button_Click_2"
                HorizontalAlignment="Left" Margin="170,10,0,0" VerticalAlignment="Top" Width="75" Grid.Row="0"/>
        <Button x:Name="BtnModify"
                Content="{Binding BtnModify}"
                IsEnabled="{Binding EnableBtnModify}"
                Click="btnModify_Click"
                HorizontalAlignment="Left" Margin="250,10,0,0" VerticalAlignment="Top" Width="75" Grid.Row="0"/>

        <Button x:Name="BtnApply"
                Content="{Binding BtnApply}"
                IsEnabled="{Binding EnableBtnApply}"
                Click="Button_Click_3"
                HorizontalAlignment="Left" Margin="389,8,0,0" VerticalAlignment="Top" Width="75" Grid.Row="0"/>
        <TextBlock x:Name="txtBlockSec"
                   Text="{Binding TimerSec}"
                   FontWeight="Bold"
                   HorizontalAlignment="Right" Margin="0,0,5,0" TextWrapping="Wrap" VerticalAlignment="Center" Grid.Row="0"/>
        <Button x:Name="btnShoMessage"
                Content="메시지"
                Command="{Binding ShowMessageCommand}"
                HorizontalAlignment="Left" Margin="469,8,0,0" VerticalAlignment="Top" Width="75" Grid.Row="0"/>
        <dxe:CheckEdit x:Name="chk0" HorizontalAlignment="Left" Margin="559,8,0,0" VerticalAlignment="Top">
            <!--<dxe:CheckEdit.Style>
                <Style TargetType="{x:Type dxe:CheckEdit}">
                    <Style.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="FocusManager.FocusedElement" Value="{Binding ElementName=txtBox}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </dxe:CheckEdit.Style>-->
        </dxe:CheckEdit>
        <CheckBox HorizontalAlignment="Left" Margin="357,14,0,0" VerticalAlignment="Top" Template="{DynamicResource CheckBoxControlTemplate1}"/>
        <dxe:TextEdit x:Name="txtBox"
                      HorizontalContentAlignment="Center"
                      IsEnabled="{Binding ElementName=chk0, Path=IsChecked}"
                      HorizontalAlignment="Left" Margin="579,8,0,0" VerticalAlignment="Top" Width="65">
            <dxe:TextEdit.Style>
                <Style TargetType="{x:Type dxe:TextEdit}">
                    <Style.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Text" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="True">
                            <Setter Property="FocusManager.FocusedElement" Value="{Binding ElementName=txtBox}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </dxe:TextEdit.Style>
        </dxe:TextEdit>
        <Button Content="확인" HorizontalAlignment="Left" Margin="660,8,0,0" VerticalAlignment="Top" Width="60" Grid.Row="0" Click="Button_Click_4"/>
    </Grid>
</UserControl>
